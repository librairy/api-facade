/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.upm.oeg.librairy.api.facade.model.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Item extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Item\",\"namespace\":\"es.upm.oeg.librairy.api.facade.model.avro\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uri\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"score\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String id;
   private java.lang.String name;
   private java.lang.String description;
   private java.lang.String uri;
   private double score;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Item() {}

  /**
   * All-args constructor.
   */
  public Item(java.lang.String id, java.lang.String name, java.lang.String description, java.lang.String uri, java.lang.Double score) {
    this.id = id;
    this.name = name;
    this.description = description;
    this.uri = uri;
    this.score = score;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return description;
    case 3: return uri;
    case 4: return score;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: description = (java.lang.String)value$; break;
    case 3: uri = (java.lang.String)value$; break;
    case 4: score = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'uri' field.
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.String value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'score' field.
   */
  public java.lang.Double getScore() {
    return score;
  }

  /**
   * Sets the value of the 'score' field.
   * @param value the value to set.
   */
  public void setScore(java.lang.Double value) {
    this.score = value;
  }

  /** Creates a new Item RecordBuilder */
  public static es.upm.oeg.librairy.api.facade.model.avro.Item.Builder newBuilder() {
    return new es.upm.oeg.librairy.api.facade.model.avro.Item.Builder();
  }
  
  /** Creates a new Item RecordBuilder by copying an existing Builder */
  public static es.upm.oeg.librairy.api.facade.model.avro.Item.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.Item.Builder other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.Item.Builder(other);
  }
  
  /** Creates a new Item RecordBuilder by copying an existing Item instance */
  public static es.upm.oeg.librairy.api.facade.model.avro.Item.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.Item other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.Item.Builder(other);
  }
  
  /**
   * RecordBuilder for Item instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Item>
    implements org.apache.avro.data.RecordBuilder<Item> {

    private java.lang.String id;
    private java.lang.String name;
    private java.lang.String description;
    private java.lang.String uri;
    private double score;

    /** Creates a new Builder */
    private Builder() {
      super(es.upm.oeg.librairy.api.facade.model.avro.Item.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.Item.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.uri)) {
        this.uri = data().deepCopy(fields()[3].schema(), other.uri);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.score)) {
        this.score = data().deepCopy(fields()[4].schema(), other.score);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Item instance */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.Item other) {
            super(es.upm.oeg.librairy.api.facade.model.avro.Item.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.uri)) {
        this.uri = data().deepCopy(fields()[3].schema(), other.uri);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.score)) {
        this.score = data().deepCopy(fields()[4].schema(), other.score);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'name' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder setDescription(java.lang.String value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'description' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'uri' field */
    public java.lang.String getUri() {
      return uri;
    }
    
    /** Sets the value of the 'uri' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder setUri(java.lang.String value) {
      validate(fields()[3], value);
      this.uri = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'uri' field has been set */
    public boolean hasUri() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'uri' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder clearUri() {
      uri = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'score' field */
    public java.lang.Double getScore() {
      return score;
    }
    
    /** Sets the value of the 'score' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder setScore(double value) {
      validate(fields()[4], value);
      this.score = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'score' field has been set */
    public boolean hasScore() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'score' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Item.Builder clearScore() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Item build() {
      try {
        Item record = new Item();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.String) defaultValue(fields()[2]);
        record.uri = fieldSetFlags()[3] ? this.uri : (java.lang.String) defaultValue(fields()[3]);
        record.score = fieldSetFlags()[4] ? this.score : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
