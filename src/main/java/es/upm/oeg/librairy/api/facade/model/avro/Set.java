/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.upm.oeg.librairy.api.facade.model.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Set extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Set\",\"namespace\":\"es.upm.oeg.librairy.api.facade.model.avro\",\"fields\":[{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Item\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"uri\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"score\",\"type\":\"double\"}]}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item> items;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Set() {}

  /**
   * All-args constructor.
   */
  public Set(java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item> items) {
    this.items = items;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return items;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: items = (java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'items' field.
   */
  public java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item> getItems() {
    return items;
  }

  /**
   * Sets the value of the 'items' field.
   * @param value the value to set.
   */
  public void setItems(java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item> value) {
    this.items = value;
  }

  /** Creates a new Set RecordBuilder */
  public static es.upm.oeg.librairy.api.facade.model.avro.Set.Builder newBuilder() {
    return new es.upm.oeg.librairy.api.facade.model.avro.Set.Builder();
  }
  
  /** Creates a new Set RecordBuilder by copying an existing Builder */
  public static es.upm.oeg.librairy.api.facade.model.avro.Set.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.Set.Builder other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.Set.Builder(other);
  }
  
  /** Creates a new Set RecordBuilder by copying an existing Set instance */
  public static es.upm.oeg.librairy.api.facade.model.avro.Set.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.Set other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.Set.Builder(other);
  }
  
  /**
   * RecordBuilder for Set instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Set>
    implements org.apache.avro.data.RecordBuilder<Set> {

    private java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item> items;

    /** Creates a new Builder */
    private Builder() {
      super(es.upm.oeg.librairy.api.facade.model.avro.Set.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.Set.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.items)) {
        this.items = data().deepCopy(fields()[0].schema(), other.items);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Set instance */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.Set other) {
            super(es.upm.oeg.librairy.api.facade.model.avro.Set.SCHEMA$);
      if (isValidValue(fields()[0], other.items)) {
        this.items = data().deepCopy(fields()[0].schema(), other.items);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'items' field */
    public java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item> getItems() {
      return items;
    }
    
    /** Sets the value of the 'items' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Set.Builder setItems(java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item> value) {
      validate(fields()[0], value);
      this.items = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'items' field has been set */
    public boolean hasItems() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'items' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Set.Builder clearItems() {
      items = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Set build() {
      try {
        Set record = new Set();
        record.items = fieldSetFlags()[0] ? this.items : (java.util.List<es.upm.oeg.librairy.api.facade.model.avro.Item>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
