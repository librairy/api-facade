/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.upm.oeg.librairy.api.facade.model.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TextReference extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TextReference\",\"namespace\":\"es.upm.oeg.librairy.api.facade.model.avro\",\"fields\":[{\"name\":\"content\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"model\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String content;
   private java.lang.String model;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TextReference() {}

  /**
   * All-args constructor.
   */
  public TextReference(java.lang.String content, java.lang.String model) {
    this.content = content;
    this.model = model;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return content;
    case 1: return model;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: content = (java.lang.String)value$; break;
    case 1: model = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'content' field.
   */
  public java.lang.String getContent() {
    return content;
  }

  /**
   * Sets the value of the 'content' field.
   * @param value the value to set.
   */
  public void setContent(java.lang.String value) {
    this.content = value;
  }

  /**
   * Gets the value of the 'model' field.
   */
  public java.lang.String getModel() {
    return model;
  }

  /**
   * Sets the value of the 'model' field.
   * @param value the value to set.
   */
  public void setModel(java.lang.String value) {
    this.model = value;
  }

  /** Creates a new TextReference RecordBuilder */
  public static es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder newBuilder() {
    return new es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder();
  }
  
  /** Creates a new TextReference RecordBuilder by copying an existing Builder */
  public static es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder(other);
  }
  
  /** Creates a new TextReference RecordBuilder by copying an existing TextReference instance */
  public static es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.TextReference other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder(other);
  }
  
  /**
   * RecordBuilder for TextReference instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TextReference>
    implements org.apache.avro.data.RecordBuilder<TextReference> {

    private java.lang.String content;
    private java.lang.String model;

    /** Creates a new Builder */
    private Builder() {
      super(es.upm.oeg.librairy.api.facade.model.avro.TextReference.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.content)) {
        this.content = data().deepCopy(fields()[0].schema(), other.content);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.model)) {
        this.model = data().deepCopy(fields()[1].schema(), other.model);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TextReference instance */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.TextReference other) {
            super(es.upm.oeg.librairy.api.facade.model.avro.TextReference.SCHEMA$);
      if (isValidValue(fields()[0], other.content)) {
        this.content = data().deepCopy(fields()[0].schema(), other.content);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.model)) {
        this.model = data().deepCopy(fields()[1].schema(), other.model);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'content' field */
    public java.lang.String getContent() {
      return content;
    }
    
    /** Sets the value of the 'content' field */
    public es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder setContent(java.lang.String value) {
      validate(fields()[0], value);
      this.content = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'content' field has been set */
    public boolean hasContent() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'content' field */
    public es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder clearContent() {
      content = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'model' field */
    public java.lang.String getModel() {
      return model;
    }
    
    /** Sets the value of the 'model' field */
    public es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder setModel(java.lang.String value) {
      validate(fields()[1], value);
      this.model = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'model' field has been set */
    public boolean hasModel() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'model' field */
    public es.upm.oeg.librairy.api.facade.model.avro.TextReference.Builder clearModel() {
      model = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public TextReference build() {
      try {
        TextReference record = new TextReference();
        record.content = fieldSetFlags()[0] ? this.content : (java.lang.String) defaultValue(fields()[0]);
        record.model = fieldSetFlags()[1] ? this.model : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
