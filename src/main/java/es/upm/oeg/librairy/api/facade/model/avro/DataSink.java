/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.upm.oeg.librairy.api.facade.model.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DataSink extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataSink\",\"namespace\":\"es.upm.oeg.librairy.api.facade.model.avro\",\"fields\":[{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"format\",\"type\":{\"type\":\"enum\",\"name\":\"WriterFormat\",\"symbols\":[\"SOLR_CORE\"]}},{\"name\":\"credentials\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Credentials\",\"fields\":[{\"name\":\"user\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"password\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"apikey\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String url;
   private es.upm.oeg.librairy.api.facade.model.avro.WriterFormat format;
   private es.upm.oeg.librairy.api.facade.model.avro.Credentials credentials;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataSink() {}

  /**
   * All-args constructor.
   */
  public DataSink(java.lang.String url, es.upm.oeg.librairy.api.facade.model.avro.WriterFormat format, es.upm.oeg.librairy.api.facade.model.avro.Credentials credentials) {
    this.url = url;
    this.format = format;
    this.credentials = credentials;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return url;
    case 1: return format;
    case 2: return credentials;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: url = (java.lang.String)value$; break;
    case 1: format = (es.upm.oeg.librairy.api.facade.model.avro.WriterFormat)value$; break;
    case 2: credentials = (es.upm.oeg.librairy.api.facade.model.avro.Credentials)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'url' field.
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.String value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'format' field.
   */
  public es.upm.oeg.librairy.api.facade.model.avro.WriterFormat getFormat() {
    return format;
  }

  /**
   * Sets the value of the 'format' field.
   * @param value the value to set.
   */
  public void setFormat(es.upm.oeg.librairy.api.facade.model.avro.WriterFormat value) {
    this.format = value;
  }

  /**
   * Gets the value of the 'credentials' field.
   */
  public es.upm.oeg.librairy.api.facade.model.avro.Credentials getCredentials() {
    return credentials;
  }

  /**
   * Sets the value of the 'credentials' field.
   * @param value the value to set.
   */
  public void setCredentials(es.upm.oeg.librairy.api.facade.model.avro.Credentials value) {
    this.credentials = value;
  }

  /** Creates a new DataSink RecordBuilder */
  public static es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder newBuilder() {
    return new es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder();
  }
  
  /** Creates a new DataSink RecordBuilder by copying an existing Builder */
  public static es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder(other);
  }
  
  /** Creates a new DataSink RecordBuilder by copying an existing DataSink instance */
  public static es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder newBuilder(es.upm.oeg.librairy.api.facade.model.avro.DataSink other) {
    return new es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder(other);
  }
  
  /**
   * RecordBuilder for DataSink instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataSink>
    implements org.apache.avro.data.RecordBuilder<DataSink> {

    private java.lang.String url;
    private es.upm.oeg.librairy.api.facade.model.avro.WriterFormat format;
    private es.upm.oeg.librairy.api.facade.model.avro.Credentials credentials;

    /** Creates a new Builder */
    private Builder() {
      super(es.upm.oeg.librairy.api.facade.model.avro.DataSink.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.format)) {
        this.format = data().deepCopy(fields()[1].schema(), other.format);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.credentials)) {
        this.credentials = data().deepCopy(fields()[2].schema(), other.credentials);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataSink instance */
    private Builder(es.upm.oeg.librairy.api.facade.model.avro.DataSink other) {
            super(es.upm.oeg.librairy.api.facade.model.avro.DataSink.SCHEMA$);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.format)) {
        this.format = data().deepCopy(fields()[1].schema(), other.format);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.credentials)) {
        this.credentials = data().deepCopy(fields()[2].schema(), other.credentials);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'url' field */
    public java.lang.String getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder setUrl(java.lang.String value) {
      validate(fields()[0], value);
      this.url = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'url' field */
    public es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder clearUrl() {
      url = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'format' field */
    public es.upm.oeg.librairy.api.facade.model.avro.WriterFormat getFormat() {
      return format;
    }
    
    /** Sets the value of the 'format' field */
    public es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder setFormat(es.upm.oeg.librairy.api.facade.model.avro.WriterFormat value) {
      validate(fields()[1], value);
      this.format = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'format' field has been set */
    public boolean hasFormat() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'format' field */
    public es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder clearFormat() {
      format = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'credentials' field */
    public es.upm.oeg.librairy.api.facade.model.avro.Credentials getCredentials() {
      return credentials;
    }
    
    /** Sets the value of the 'credentials' field */
    public es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder setCredentials(es.upm.oeg.librairy.api.facade.model.avro.Credentials value) {
      validate(fields()[2], value);
      this.credentials = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'credentials' field has been set */
    public boolean hasCredentials() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'credentials' field */
    public es.upm.oeg.librairy.api.facade.model.avro.DataSink.Builder clearCredentials() {
      credentials = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public DataSink build() {
      try {
        DataSink record = new DataSink();
        record.url = fieldSetFlags()[0] ? this.url : (java.lang.String) defaultValue(fields()[0]);
        record.format = fieldSetFlags()[1] ? this.format : (es.upm.oeg.librairy.api.facade.model.avro.WriterFormat) defaultValue(fields()[1]);
        record.credentials = fieldSetFlags()[2] ? this.credentials : (es.upm.oeg.librairy.api.facade.model.avro.Credentials) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
